package model.readonly;

import java.math.BigDecimal;
import java.math.BigInteger;

import java.sql.Timestamp;

import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Apr 08 21:40:57 CDT 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OpenItemsROVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CustId,
        BalAmt,
        BalCurrency,
        Collector,
        DstIdAr,
        DueDt,
        Item,
        ItemLine,
        ItemStatus,
        SalesPerson;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int CUSTID = AttributesEnum.CustId.index();
    public static final int BALAMT = AttributesEnum.BalAmt.index();
    public static final int BALCURRENCY = AttributesEnum.BalCurrency.index();
    public static final int COLLECTOR = AttributesEnum.Collector.index();
    public static final int DSTIDAR = AttributesEnum.DstIdAr.index();
    public static final int DUEDT = AttributesEnum.DueDt.index();
    public static final int ITEM = AttributesEnum.Item.index();
    public static final int ITEMLINE = AttributesEnum.ItemLine.index();
    public static final int ITEMSTATUS = AttributesEnum.ItemStatus.index();
    public static final int SALESPERSON = AttributesEnum.SalesPerson.index();

    /**
     * This is the default constructor (do not remove).
     */
    public OpenItemsROVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CustId.
     * @return the CustId
     */
    public String getCustId() {
        return (String) getAttributeInternal(CUSTID);
    }


    /**
     * Gets the attribute value for the calculated attribute BalAmt.
     * @return the BalAmt
     */
    public BigDecimal getBalAmt() {
        return (BigDecimal) getAttributeInternal(BALAMT);
    }

    /**
     * Gets the attribute value for the calculated attribute BalCurrency.
     * @return the BalCurrency
     */
    public String getBalCurrency() {
        return (String) getAttributeInternal(BALCURRENCY);
    }

    /**
     * Gets the attribute value for the calculated attribute Collector.
     * @return the Collector
     */
    public String getCollector() {
        return (String) getAttributeInternal(COLLECTOR);
    }

    /**
     * Gets the attribute value for the calculated attribute DstIdAr.
     * @return the DstIdAr
     */
    public String getDstIdAr() {
        return (String) getAttributeInternal(DSTIDAR);
    }

    /**
     * Gets the attribute value for the calculated attribute DueDt.
     * @return the DueDt
     */
    public Timestamp getDueDt() {
        return (Timestamp) getAttributeInternal(DUEDT);
    }

    /**
     * Gets the attribute value for the calculated attribute Item.
     * @return the Item
     */
    public String getItem() {
        return (String) getAttributeInternal(ITEM);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemLine.
     * @return the ItemLine
     */
    public BigInteger getItemLine() {
        return (BigInteger) getAttributeInternal(ITEMLINE);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemStatus.
     * @return the ItemStatus
     */
    public String getItemStatus() {
        return (String) getAttributeInternal(ITEMSTATUS);
    }

    /**
     * Gets the attribute value for the calculated attribute SalesPerson.
     * @return the SalesPerson
     */
    public String getSalesPerson() {
        return (String) getAttributeInternal(SALESPERSON);
    }
}

