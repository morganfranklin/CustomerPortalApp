package model;

import oracle.jbo.Row;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed May 17 11:13:06 EDT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PaymentProfileViewObjectRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CustomerId,
        ProfileId,
        ProfileToken,
        ProfileName,
        ProfileAccountNumber,
        ProfileMethod,
        ProfileExpiry,
        email,
        CustomerView;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CUSTOMERID = AttributesEnum.CustomerId.index();
    public static final int PROFILEID = AttributesEnum.ProfileId.index();
    public static final int PROFILETOKEN = AttributesEnum.ProfileToken.index();
    public static final int PROFILENAME = AttributesEnum.ProfileName.index();
    public static final int PROFILEACCOUNTNUMBER = AttributesEnum.ProfileAccountNumber.index();
    public static final int PROFILEMETHOD = AttributesEnum.ProfileMethod.index();
    public static final int PROFILEEXPIRY = AttributesEnum.ProfileExpiry.index();
    public static final int EMAIL = AttributesEnum.email.index();
    public static final int CUSTOMERVIEW = AttributesEnum.CustomerView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PaymentProfileViewObjectRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CustomerId.
     * @return the CustomerId
     */
    public String getCustomerId() {
        return (String) getAttributeInternal(CUSTOMERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CustomerId.
     * @param value value to set the  CustomerId
     */
    public void setCustomerId(String value) {
        setAttributeInternal(CUSTOMERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProfileId.
     * @return the ProfileId
     */
    public String getProfileId() {
        return (String) getAttributeInternal(PROFILEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProfileId.
     * @param value value to set the  ProfileId
     */
    public void setProfileId(String value) {
        setAttributeInternal(PROFILEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProfileToken.
     * @return the ProfileToken
     */
    public String getProfileToken() {
        return (String) getAttributeInternal(PROFILETOKEN);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProfileToken.
     * @param value value to set the  ProfileToken
     */
    public void setProfileToken(String value) {
        setAttributeInternal(PROFILETOKEN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProfileName.
     * @return the ProfileName
     */
    public String getProfileName() {
        return (String) getAttributeInternal(PROFILENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProfileName.
     * @param value value to set the  ProfileName
     */
    public void setProfileName(String value) {
        setAttributeInternal(PROFILENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProfileAccountNumber.
     * @return the ProfileAccountNumber
     */
    public String getProfileAccountNumber() {
        return (String) getAttributeInternal(PROFILEACCOUNTNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProfileAccountNumber.
     * @param value value to set the  ProfileAccountNumber
     */
    public void setProfileAccountNumber(String value) {
        setAttributeInternal(PROFILEACCOUNTNUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProfileMethod.
     * @return the ProfileMethod
     */
    public String getProfileMethod() {
        return (String) getAttributeInternal(PROFILEMETHOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProfileMethod.
     * @param value value to set the  ProfileMethod
     */
    public void setProfileMethod(String value) {
        setAttributeInternal(PROFILEMETHOD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProfileExpiry.
     * @return the ProfileExpiry
     */
    public String getProfileExpiry() {
        return (String) getAttributeInternal(PROFILEEXPIRY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProfileExpiry.
     * @param value value to set the  ProfileExpiry
     */
    public void setProfileExpiry(String value) {
        setAttributeInternal(PROFILEEXPIRY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute email.
     * @return the email
     */
    public String getemail() {
        return (String) getAttributeInternal(EMAIL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute email.
     * @param value value to set the  email
     */
    public void setemail(String value) {
        setAttributeInternal(EMAIL, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link CustomerView.
     */
    public Row getCustomerView() {
        return (Row) getAttributeInternal(CUSTOMERVIEW);
    }

    /**
     * Sets the master-detail link CustomerView between this object and <code>value</code>.
     */
    public void setCustomerView(Row value) {
        setAttributeInternal(CUSTOMERVIEW, value);
    }
}

