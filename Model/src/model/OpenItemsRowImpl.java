package model;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.Row;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Jun 03 09:21:18 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OpenItemsRowImpl extends ViewRowImpl {


    public static final int ENTITY_OPENITEMSEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        BalAmt,
        CustId,
        Item,
        BalCurrency,
        DueDt,
        DstIdAr,
        paymentAmount,
        selected,
        SalesPerson,
        Collector,
        ItemLine,
        ItemStatus,
        CustomerView;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BALAMT = AttributesEnum.BalAmt.index();
    public static final int CUSTID = AttributesEnum.CustId.index();
    public static final int ITEM = AttributesEnum.Item.index();
    public static final int BALCURRENCY = AttributesEnum.BalCurrency.index();
    public static final int DUEDT = AttributesEnum.DueDt.index();
    public static final int DSTIDAR = AttributesEnum.DstIdAr.index();
    public static final int PAYMENTAMOUNT = AttributesEnum.paymentAmount.index();
    public static final int SELECTED = AttributesEnum.selected.index();
    public static final int SALESPERSON = AttributesEnum.SalesPerson.index();
    public static final int COLLECTOR = AttributesEnum.Collector.index();
    public static final int ITEMLINE = AttributesEnum.ItemLine.index();
    public static final int ITEMSTATUS = AttributesEnum.ItemStatus.index();
    public static final int CUSTOMERVIEW = AttributesEnum.CustomerView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public OpenItemsRowImpl() {
    }

    /**
     * Gets OpenItemsEO entity object.
     * @return the OpenItemsEO
     */
    public EntityImpl getOpenItemsEO() {
        return (EntityImpl) getEntity(ENTITY_OPENITEMSEO);
    }

    /**
     * Gets the attribute value for BAL_AMT using the alias name BalAmt.
     * @return the BAL_AMT
     */
    public BigDecimal getBalAmt() {
        return (BigDecimal) getAttributeInternal(BALAMT);
    }

    /**
     * Gets the attribute value for CUST_ID using the alias name CustId.
     * @return the CUST_ID
     */
    public String getCustId() {
        return (String) getAttributeInternal(CUSTID);
    }

    /**
     * Gets the attribute value for ITEM using the alias name Item.
     * @return the ITEM
     */
    public String getItem() {
        return (String) getAttributeInternal(ITEM);
    }

    /**
     * Gets the attribute value for BAL_CURRENCY using the alias name BalCurrency.
     * @return the BAL_CURRENCY
     */
    public String getBalCurrency() {
        return (String) getAttributeInternal(BALCURRENCY);
    }

    /**
     * Sets <code>value</code> as attribute value for BAL_CURRENCY using the alias name BalCurrency.
     * @param value value to set the BAL_CURRENCY
     */
    public void setBalCurrency(String value) {
        setAttributeInternal(BALCURRENCY, value);
    }

    /**
     * Gets the attribute value for PAYMENT_AMOUNT using the alias name paymentAmount.
     * @return the PAYMENT_AMOUNT
     */
    public BigDecimal getpaymentAmount() {
        return (BigDecimal) getAttributeInternal(PAYMENTAMOUNT);
    }

    /**
     * Sets <code>value</code> as attribute value for PAYMENT_AMOUNT using the alias name paymentAmount.
     * @param value value to set the PAYMENT_AMOUNT
     */
    public void setpaymentAmount(BigDecimal value) {
        setAttributeInternal(PAYMENTAMOUNT, value);
    }

    /**
     * Gets the attribute value for DUE_DT using the alias name DueDt.
     * @return the DUE_DT
     */
    public Date getDueDt() {
        return (Date) getAttributeInternal(DUEDT);
    }

    /**
     * Gets the attribute value for SELECTED using the alias name selected.
     * @return the SELECTED
     */
    public Boolean getselected() {
        return (Boolean) getAttributeInternal(SELECTED);
    }

    /**
     * Sets <code>value</code> as attribute value for SELECTED using the alias name selected.
     * @param value value to set the SELECTED
     */
    public void setselected(Boolean value) {
        setAttributeInternal(SELECTED, value);
    }

    /**
     * Gets the attribute value for SALES_PERSON using the alias name SalesPerson.
     * @return the SALES_PERSON
     */
    public String getSalesPerson() {
        return (String) getAttributeInternal(SALESPERSON);
    }

    /**
     * Sets <code>value</code> as attribute value for SALES_PERSON using the alias name SalesPerson.
     * @param value value to set the SALES_PERSON
     */
    public void setSalesPerson(String value) {
        setAttributeInternal(SALESPERSON, value);
    }

    /**
     * Gets the attribute value for COLLECTOR using the alias name Collector.
     * @return the COLLECTOR
     */
    public String getCollector() {
        return (String) getAttributeInternal(COLLECTOR);
    }

    /**
     * Sets <code>value</code> as attribute value for COLLECTOR using the alias name Collector.
     * @param value value to set the COLLECTOR
     */
    public void setCollector(String value) {
        setAttributeInternal(COLLECTOR, value);
    }

    /**
     * Gets the attribute value for ITEM_LINE using the alias name ItemLine.
     * @return the ITEM_LINE
     */
    public BigDecimal getItemLine() {
        return (BigDecimal) getAttributeInternal(ITEMLINE);
    }

    /**
     * Sets <code>value</code> as attribute value for ITEM_LINE using the alias name ItemLine.
     * @param value value to set the ITEM_LINE
     */
    public void setItemLine(BigDecimal value) {
        setAttributeInternal(ITEMLINE, value);
    }

    /**
     * Gets the attribute value for ITEM_STATUS using the alias name ItemStatus.
     * @return the ITEM_STATUS
     */
    public String getItemStatus() {
        return (String) getAttributeInternal(ITEMSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITEM_STATUS using the alias name ItemStatus.
     * @param value value to set the ITEM_STATUS
     */
    public void setItemStatus(String value) {
        setAttributeInternal(ITEMSTATUS, value);
    }

    /**
     * Gets the attribute value for DST_ID_AR using the alias name DstIdAr.
     * @return the DST_ID_AR
     */
    public String getDstIdAr() {
        return (String) getAttributeInternal(DSTIDAR);
    }


    /**
     * Gets the associated <code>Row</code> using master-detail link CustomerView.
     */
    public Row getCustomerView() {
        return (Row) getAttributeInternal(CUSTOMERVIEW);
    }

    /**
     * Sets the master-detail link CustomerView between this object and <code>value</code>.
     */
    public void setCustomerView(Row value) {
        setAttributeInternal(CUSTOMERVIEW, value);
    }
}

